---
- name: install postgres
  become: true
  package:
    name:
      - postgis
      - postgresql
      - postgresql-client
      - postgresql-contrib # extension modules
      - libpq-dev
    state: present


# install pgcli with brew to avoid prompt-toolkit version conflict
- import_tasks: ../../essentials/tasks/linuxbrew.yml
- name: install pgcli
  shell: brew install pgcli

- name: clone pg_activity
  git:
    repo: https://github.com/dalibo/pg_activity
    dest: "{{ localsrc_dir }}/pg_activity"

- name: install pg_activity with elevated permissions
  become: true
  shell: python3 setup.py install --with-man
  args:
    chdir: "{{ localsrc_dir }}/pg_activity"

- name: download check_postgres
  get_url:
    src: https://bucardo.org/downloads/check_postgres.tar.gz
    dest: "{{ localsrc_dir }}"

- name: extract check_postgres
  unarchive:
    src: "{{ localsrc_dir }}/check_postgres.tar.gz"
    dest: "{{ localsrc_dir }}"

- name: make, build and install check_postgres
  shell: "{{ item }}"
  with_items:
    - perl Makefile.PL
    - make
    - env -i make test
    - make install

# check_postgres.pl --symlinks
# check_postgres_connection --db=apidb_test

# _ apt-get install libjson-xs-perl
    # tar xzf pgbadger-11.x.tar.gz
    # cd pgbadger-11.x/
    # perl Makefile.PL
    # make && sudo make install


# log_min_duration_statement = 0
# log_line_prefix = '%t [%p]: user=%u,db=%d,app=%a,client=%h '
# log_checkpoints = on
# log_connections = on
# log_disconnections = on
# log_lock_waits = on
# log_temp_files = 0
# log_autovacuum_min_duration = 0
# log_error_verbosity = default # terse, default, verbose

# CREATE EXTENSION postgis, postgis-topology, pg_stat_statements;
# change /etc/postgresql/12/main/postgresql.conf:
#   shared_preload_libraries = 'pg_stat_statements'
#   pg_stat_statements.max = 10000
#   pg_stat_statements.track = all
